:root {
	--penguin-face: white;
	--penguin-picorna: orange;
	--penguin-skin: gray;
  }
  
  body {
	background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
	/*Four lines below to normalize body:
	width::100vw can be used, but it might cause horizontal scrolling in some cases. For example, if there’s a vertical scrollbar, 100vw includes the scrollbar’s width, which can make the content slightly wider than the visible area. Using width: 100% avoids this issue because it respects the actual width of the parent without including the scrollbar.
	height: 100% would make the body take up the full height of its parent. However, if the parent (e.g., html element) doesn't have an explicitly defined height, 100% won't work as expected. That's why 100vh, which directly references the viewport height, is preferred—it’s independent of the parent’s height.*/
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100vh;
	overflow: hidden;/*Remove both the horizontal and vertical scrollbars,*/
  }
  
  .left-mountain {
	width: 300px;
	height: 300px;
	background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
	position: absolute;
	transform: skew(0deg, 44deg);/*to make the mountain look more like a mountain. Skew takes two arguments: The first being an angle to shear the x-axis by, and the second being an angle to shear the y-axis.*/
	z-index: 2;/*Set the stack level of the mountain element such that it remains directly behind the .ground element.*/
	margin-top: 100px;
  }
  
  .back-mountain {
	width: 300px;
	height: 300px;
	background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
	position: absolute;
	z-index: 1;
	transform: rotate(45deg);
	left: 110px;
	top: 225px;
  }
  
  .sun {
	width: 200px;
	height: 200px;
	background-color: yellow;
	position: absolute;
	border-radius: 50%;
	top: -75px;
	right: -75px;
  }
  
  .penguin {
	width: 300px;
	height: 300px;
	margin: auto;
	margin-top: 75px;
	z-index: 4;
	position: relative;
	transition: transform 1s ease-in-out 0ms; /*Change the .penguin element's transition behavior during transformation (while clicking) to have a duration of 1s, a timing function of ease-in-out, and a delay of 0ms.
	*/
  }
  
  .penguin * {
	position: absolute;
  }
  
  .penguin:active {/*Target the .penguin element when it is active, and increase its size by 50% in both dimensions.*/
	transform: scale(1.5);
	cursor: not-allowed;/*Change the cursor to a not-allowed icon when the .penguin element is active.*/
  }
  
  .penguin-head {
	width: 50%;
	height: 45%;
	background: linear-gradient(
	  45deg,
	  var(--penguin-skin),
	  rgb(239, 240, 228)
	);
	border-radius: 70% 70% 65% 65%;
	top: 10%;
	left: 25%;/*Position the element 10% from the top, and 25% from the left of its parent.*/
	z-index: 1;
  }
  
  .face {
	width: 60%;
	height: 70%;
	background-color: var(--penguin-face);
	border-radius: 70% 70% 60% 60%;
	top: 15%;
  }
  
  .face.left {/*This selector targets elements that have both classes: face and left.*/
	left: 5%;
  }
  
  .face.right {
	right: 5%;
  }
  
  .chin {
	width: 90%;
	height: 70%;
	background-color: var(--penguin-face);
	top: 25%;
	left: 5%;
	border-radius: 70% 70% 100% 100%;
  }
  
  .eye {
	width: 15%;
	height: 17%;
	background-color: black;
	top: 45%;
	border-radius: 50%;
  }
  
  .eye.left {
	left: 25%;
  }
  
  .eye.right {
	right: 25%;
  }
  
  .eye-lid {
	width: 150%;
	height: 100%;
	background-color: var(--penguin-face);
	top: 25%;
	left: -23%;
	border-radius: 50%;
  }
  
  .blush {
	width: 15%;
	height: 10%;
	background-color: pink;
	top: 65%;
	border-radius: 50%;
  }
  
  .blush.left {
	left: 15%;
  }
  
  .blush.right {
	right: 15%;
  }
  
  .beak {
	height: 10%;
	background-color: var(--penguin-picorna);
	border-radius: 50%;
  }
  
  .beak.top {
	width: 20%;
	top: 60%;
	left: 40%;
  }
  
  .beak.bottom {
	width: 16%;
	top: 65%;
	left: 42%;
  }
  
  .shirt {
	font: bold 25px Helvetica, sans-serif;
	top: 165px;
	left: 127.5px;
	z-index: 1;
	color: #6a6969;
  }
  
  .shirt div {
	font-weight:  initial;
	top: 22.5px;
	left: 12px;
  }
  
  .penguin-body {
	width: 53%;
	height: 45%;
	background: linear-gradient(
	  45deg,
	  rgb(134, 133, 133) 0%,
	  rgb(234, 231, 231) 25%,
	  white 67%
	);
	border-radius: 80% 80% 100% 100%;
	top: 40%;
	left: 23.5%;
  }
  
  .penguin-body::before {/*::before is used to create a new pseudo-element that appears before the content of all .penguin-body elements.*/
	content: "";
	position: absolute;
	width: 50%;
	height: 45%;
	background-color: var(--penguin-skin);
	top: 10%;
	left: 25%;
	border-radius: 0% 0% 100% 100%;
	opacity: 70%;
	/*background-color: rgba(128, 128, 128, 30%) x opacity:70%;
 	rgba affects only the background color.
	opacity impacts the entire pseudo-element (including background, text, and any content within).*/
  }
  
  .arm {
	width: 30%;
	height: 60%;
	background: linear-gradient(
	  90deg,
	  var(--penguin-skin),
	  rgb(209, 210, 199)
	);
	border-radius: 30% 30% 30% 120%;
	z-index: -1;
  }
  
  .arm.left {
	top: 35%;
	left: 5%;
	transform-origin: top left; 
	transform: rotate(130deg) scaleX(-1);/*rotate 130deg and flip it horizontally (along the x axis)*/
	animation: 3s linear infinite wave;
  }
  
  .arm.right {
	top: 0%;
	right: -5%;
	transform: rotate(-45deg);
  }
  
  @keyframes wave {
	10% {
	  transform: rotate(110deg) scaleX(-1);
	}
	20% {
	  transform: rotate(130deg) scaleX(-1);
	}
	30% {
	  transform: rotate(110deg) scaleX(-1);
	}
	40% {
	  transform: rotate(130deg) scaleX(-1);
	}
  }
  
  .foot {
	width:  15%;
	height: 30%;
	background-color: var(--penguin-picorna);
	top: 85%;
	border-radius: 50%;
	z-index: -1;
  }
  
  .foot.left {
	left: 25%;
	transform: rotate(80deg);
  }
  
  .foot.right {
	right: 25%;
	transform: rotate(-80deg);
  }

  	/*width:100vw;
  	height:400px; (400px substituted by the calc function)
	The goal might be to explicitly teach the use of vw units, ensuring the ground element spans the entire viewport width regardless of its parent setup (independence from Parent Width) versus: 100vw includes the width of any scrollbars. If there's a vertical scrollbar, it can cause unwanted horizontal scrolling. If that's a concern, width: 100% might indeed be a safer choice.*/
  .ground {
	width: 100vw;
	height: calc(100vh - 300px);/*calculate the height of the .ground element to be the height of the viewport minus the height of the .penguin element.*/
	background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));
	z-index: 3;
	position: absolute;
	margin-top: -58px;
  }

  footer{
	font-family: sans-serif;
	text-align: center;
	padding: 0.1rem 0;
	width: 100%;
	font-size: 62.5%;
	background-color: #dfdfe2;
	margin-top: 3%;
	position:fixed;
	bottom:0;
	left:0;
	z-index: 3;
 }